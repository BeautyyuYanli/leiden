[project]
name = "hierarchical-leiden"
version = "0.2.0"
description = "Implementation of the hierarchical Leiden community detection algorithms."

license = {text = "EUPL-1.2"}
requires-python = ">=3.10"
authors = [
    {name = "Daniel Albert", email = "git+community-detection+252b9@esclear.de"},
    {name = "Yanli", email = "mail@yanli.one"},
]
dependencies = [
    "networkx>=3.0",
]
readme = "README.md"


[project.optional-dependencies]
demo = [
    "ipynb>=0.5.1",
    "jupyter>=1.1.1",
    "matplotlib>=3.10.3",
]
[tool.black]
line-length = 140
target-version = ["py39", "py310"]
skip-string-normalization = true


[tool.coverage.run]
branch = true
omit = [
    # Omit tests
    "tests/*",
    # Omit system-wide libraries
    "/nix/*",
    "/usr/*",
    "/lib/*"
]

[tool.coverage.report]
exclude_also = [
    "@(abc\\.)?abstractmethod",
]


[tool.ruff]
line-length = 140

[tool.ruff.lint]
select = [ "E", "F", "UP", "W", "N", "I", "RUF", "PL" ]
ignore = [
    "PLR0913",
    "RUF001", "RUF002", "RUF003",  # Ignore warnings about ambiguous unicode characters (𝓗, 𝓟, …)
    "N803", "N806",  # Ignore warnings about uppercase, single-letter variable names (G, H, …)
]

[tool.ruff.lint.per-file-ignores]
# For the tests, allow longer lines, missing docstrings for modules and "magic values" in comparisons to keep tests simple
"tests/*" = ["D100", "D103", "D104", "E501", "PLR2004"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pylint]
max-args = 6


[tool.mypy]
strict = true
# exclude the folder 'local', which is not checked into the version management system
exclude = [ "local" ]

# There is no proper typing stub of the networkx library
[[tool.mypy.overrides]]
module = [ "networkx", "networkx.algorithms.community", "pandas" ]
ignore_missing_imports = true


[tool.isort]
line_length = 140
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pdm]
distribution = true

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]
